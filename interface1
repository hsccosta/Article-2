# --- Bibliotecas ---
library(shiny)
library(readxl)
library(magick)
library(base64enc)
library(raster)
library(sf)
library(leaflet)
library(dplyr)
library(ggplot2)
library(plotly)
library(tidyr)

# --- Caminhos fixos ---
raster_2023_path <- "C:/Users/DELL/Desktop/Artigo 2_TC/Arquivos ArcGis/LULC_GDEs_50m/GDEs_50m_lulc_1m/2023.tif"
shp_apa_path <- "C:/Users/DELL/Desktop/Artigo 2_TC/Arquivos ArcGis/apa_de_campinas.shp"
logos_file <- "C:/Users/DELL/Desktop/Artigo 2_TC/Arquivos ArcGis/logos_combinados.jpg"
img_folder <- "C:/Users/DELL/Desktop/Artigo 2_TC/Arquivos ArcGis/LULC_GDEs_50m/Interface_Observatório das Nascentes/lulc_raw/resymb/tiras_lulc"
shp_recortes <- "C:/Users/DELL/Desktop/Artigo 2_TC/Arquivos ArcGis/LULC_GDEs_50m/Interface_Observatório das Nascentes/lulc_raw/resymb"

# --- Solicita arquivos Excel ao iniciar ---
nascente_excel_path <- file.choose()
classe_excel_path <- file.choose()

# --- Dados base ---
raster_2023 <- raster(raster_2023_path)
shp_apa <- st_read(shp_apa_path, quiet = TRUE)

# --- Legenda ---
legenda_lulc <- function() {
  classes <- data.frame(
    nome = c("Formação Florestal", "Floresta Plantada", "Pastagem",
             "Mosaico de Usos", "Cultura Temporária", "Rios e Lagos",
             "Área Urbanizada", "Campo Alagado e Área Pantanosa", "Não Observado"),
    cor = c("#1f8d49", "#7a5900", "#edde8e", "#ffefc3",
            "#C27BA0", "#2532e4", "#d4271e", "#519799", "#ffffff")
  )
  tags$div(
    tags$h4(class = "titulo-legenda", HTML("<strong>Classes de Uso e Cobertura da Terra</strong>")),
    tags$div(style = "display: flex; flex-direction: column;",
             lapply(1:nrow(classes), function(i) {
               tags$div(style = paste0("display: flex; align-items: center; margin-bottom: 4px;"),
                        tags$div(style = paste0("width: 20px; height: 20px; background-color:", classes$cor[i],
                                                "; margin-right: 5px; border: 1px solid #000;")),
                        
                        tags$span(classes$nome[i], class = "classe-legenda")
               )
             })
    )
  )
}

# --- UI ---
ui <- fluidPage(
  tags$head(
    tags$style(HTML("
      body, .form-control, .selectize-input, .leaflet-popup-content,
      .shiny-output-error-validation, .shiny-output-error,
      h1, h2, h3, h4, h5, h6, label, .leaflet-control, .dataTables_wrapper {
        font-family: 'Times New Roman', serif !important;
      }
      .titulo-principal {
        font-size: 168% !important;
      }
      .titulo-legenda {
        font-size: 98% !important;
        font-weight: bold !important;
      }
      .titulo-mudancas {
        font-size: 156% !important;
      }
      .input-menor label {
        font-size: 104% !important;
      }
      .classe-legenda {
        font-size: 104% !important;
      }
      .label-prop-nasc {
        font-size: 114% !important;
      }
      .anos-mudancas {
        font-size: 105% !important;
        font-weight: bold;
        margin-bottom: 10px;
        display: flex;
        justify-content: space-between;
        max-width: 700px;
      }
    "))
  ),
  
  tags$img(src = dataURI(file = logos_file, mime = "image/jpeg"), style = "width: 380px;"),
  tags$h2(class = "titulo-principal",
          HTML("Observatório das Mudanças de Uso e Cobertura da Terra em Áreas de Nascentes v.1.0<br>Local: APA de Campinas")),
  
  tabsetPanel(
    tabPanel("Buscar por Nascente",
             sidebarLayout(
               sidebarPanel(
                 div(class = "input-menor",
                     numericInput("nascente_id", "ID da Nascente (1 - 1326):", value = 1, min = 1, max = 1326)),
                 uiOutput("props_for_nascente"),
                 tags$hr(), legenda_lulc()
               ),
               mainPanel(
                 tags$h4(class = "titulo-mudancas", "Mudanças de Uso e Cobertura da Terra (2016-2023)"),
                 tags$div(class = "anos-mudancas", 
                          lapply(2016:2025, function(ano) tags$span(ano))
                 ),
                 uiOutput("image_nascente")
               )
             )
    ),
    tabPanel("Buscar por Propriedade",
             sidebarLayout(
               sidebarPanel(
                 div(class = "input-menor",
                     numericInput("prop_id", "ID da Propriedade (CAR) (1 - 675):", value = 1, min = 1, max = 675)),
                 uiOutput("nascentes_for_prop"),
                 tags$hr(), legenda_lulc()
               ),
               mainPanel(
                 tags$h4(class = "titulo-mudancas", "Mudanças de Uso e Cobertura da Terra (2016-2023)"),
                 tags$div(class = "anos-mudancas", 
                          lapply(2016:2025, function(ano) tags$span(ano))
                 ),
                 uiOutput("image_propriedade")
               )
             )
    ),
    # ... (continua igual nas demais abas)
    tabPanel("Classe Predominante",
             sidebarLayout(
               sidebarPanel(
                 selectInput("classe_escolhida", "Escolha uma classe de uso e cobertura da terra:",
                             choices = c("Formação Florestal", "Floresta Plantada", "Pastagem",
                                         "Mosaico de Usos", "Cultura Temporária", "Rios e Lagos",
                                         "Área Urbanizada", "Campo Alagado e Área Pantanosa", "Não Observado")),
                 downloadButton("download_csv", "Baixar CSV"),
                 tags$hr(), legenda_lulc()
               ),
               mainPanel(
                 tags$h4("Feições com essa classe como predominante:"),
                 dataTableOutput("feicoes_predominantes"),
                 tags$h4("Distribuição de Pixels por Classe nas Feições Selecionadas"),
                 plotlyOutput("grafico_classe"),
                 tags$h4("Localização das Feições no Mapa"),
                 leafletOutput("mapa_classe", height = 400)
               )
             )
    ),
    tabPanel("Transições 2022-2023",
             sidebarLayout(
               sidebarPanel(
                 numericInput("id_nascente_viz", "ID da Nascente (1 - 1326):", value = NA, min = 1, max = 1326),
                 numericInput("id_prop_viz", "ID da Propriedade (CAR) (1 - 675):", value = NA, min = 1, max = 675),
                 uiOutput("info_cross_viz"),
                 tags$hr(), legenda_lulc()
               ),
               mainPanel(
                 tags$h4("Feições Correspondentes no Raster (2023.tif):"),
                 plotOutput("plot_raster_viz")
               )
             )
    ),
    tabPanel("Mapa",
             leafletOutput("mapa_apa", height = 600))
  )
)

# --- Server ---
# (Sem alterações no server, permanece como no seu script original)

# --- Executa o app ---
shinyApp(ui, server)
